{"identifiers":["RelativeInequality","Multiplication","Size","SupportsPositioningLayoutProxy","Coefficients","SupportsEdgesLayoutProxy","NumericalInequality","Compound","LayoutGuideProxy","LayoutSupportProxy","SupportsRightLayoutProxy","Property","LayoutItem","NumericalEquality","ConstraintGroup","SupportsTrailingLayoutProxy","LayoutSupport","AutoresizingMaskLayoutProxy","SupportsBaselineLayoutProxy","SupportsTopLayoutProxy","Context","ViewProxy","SupportsLeftLayoutProxy","Point","SupportsHeightLayoutProxy","Edges","Expression","SupportsCenterXLayoutProxy","LayoutProxy","RelativeEquality","Dimension","SupportsLeadingLayoutProxy","RelativeCompoundInequality","SupportsSizeLayoutProxy","Addition","SupportsBottomLayoutProxy","SupportsCenteringLayoutProxy","Edge","SupportsCenterYLayoutProxy","RelativeCompoundEquality","SupportsWidthLayoutProxy"],"products":["Cartography"],"prefix":"SLR_","fnReplace":[{"signature":"(_ item1: A, _ item2: B, _ item3: C, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(right first: SupportsRightLayoutProxy, _ rest: SupportsRightLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(bottom first: SupportsBottomLayoutProxy, _ rest: SupportsBottomLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(top items: [SupportsTopLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(centerX first: SupportsCenterXLayoutProxy, _ rest: SupportsCenterXLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, _ item5: E, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType, E.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(by amount: CGFloat = 0.0, horizontally items: [SupportsLeadingLayoutProxy & SupportsTrailingLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(_ edges: Edges, vertically vertical: CGFloat) -> Expression<Edges> ","identifier":"inset"},{"signature":"(right items: [SupportsRightLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(_ edges: Edges, horizontally horizontal: CGFloat) -> Expression<Edges> ","identifier":"inset"},{"signature":"(_ item1: A, _ item2: B, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(_ items: [T], replace group: ConstraintGroup = .init(), block: ([T.ProxyType]) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, _ item5: E, _ item6: F, _ item7: G, _ item8: H, _ item9: I, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType, E.ProxyType, F.ProxyType, G.ProxyType, H.ProxyType, I.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(centerX items: [SupportsCenterXLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(leading items: [SupportsLeadingLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(_ edges: Edges, _ insets: UIEdgeInsets) -> Expression<Edges> ","identifier":"inset"},{"signature":"(by amount: CGFloat = 0.0, vertically items: [SupportsTopLayoutProxy & SupportsBottomLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(_ edges: Edges, _ all: CGFloat) -> Expression<Edges> ","identifier":"inset"},{"signature":"(leading first: SupportsLeadingLayoutProxy, _ rest: SupportsLeadingLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(baseline items: [SupportsBaselineLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(left first: SupportsLeftLayoutProxy, _ rest: SupportsLeftLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, _ item5: E, _ item6: F, _ item7: G, _ item8: H, _ item9: I, _ item10: J, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType, E.ProxyType, F.ProxyType, G.ProxyType, H.ProxyType, I.ProxyType, J.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(trailing first: SupportsTrailingLayoutProxy, _ rest: SupportsTrailingLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(centerY items: [SupportsCenterYLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(equalWidth first: SupportsWidthLayoutProxy, _ rest: (SupportsWidthLayoutProxy)...) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(top first: SupportsTopLayoutProxy, _ rest: SupportsTopLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(equalWidth items: [SupportsWidthLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(_ edges: Edges, _ top: CGFloat, _ leading: CGFloat, _ bottom: CGFloat, _ trailing: CGFloat) -> Expression<Edges> ","identifier":"inset"},{"signature":"(baseline first: SupportsBaselineLayoutProxy, _ rest: SupportsBaselineLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(by amount: CGFloat = 0.0, vertically first: SupportsTopLayoutProxy & SupportsBottomLayoutProxy, _ rest: (SupportsTopLayoutProxy & SupportsBottomLayoutProxy)...) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(clear group: ConstraintGroup) ","identifier":"constrain"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, _ item5: E, _ item6: F, _ item7: G, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType, E.ProxyType, F.ProxyType, G.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(trailing items: [SupportsTrailingLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(by amount: CGFloat = 0.0, leftToRight items: [SupportsLeftLayoutProxy & SupportsRightLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(_ items: [T: U], replace group: ConstraintGroup = .init(), block: ([T: U.ProxyType]) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(bottom items: [SupportsBottomLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(equalHeight items: [SupportsHeightLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(equalHeight first: SupportsHeightLayoutProxy, _ rest: (SupportsHeightLayoutProxy)...) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, _ item5: E, _ item6: F, _ item7: G, _ item8: H, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType, E.ProxyType, F.ProxyType, G.ProxyType, H.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(_ item: A, replace group: ConstraintGroup = .init(), block: (A.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(centerY first: SupportsCenterYLayoutProxy, _ rest: SupportsCenterYLayoutProxy...) -> [NSLayoutConstraint] ","identifier":"align"},{"signature":"(by amount: CGFloat = 0.0, horizontally first: SupportsLeadingLayoutProxy & SupportsTrailingLayoutProxy, _ rest: (SupportsLeadingLayoutProxy & SupportsTrailingLayoutProxy)...) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(by amount: CGFloat = 0.0, leftToRight first: SupportsLeftLayoutProxy & SupportsRightLayoutProxy, _ rest: (SupportsLeftLayoutProxy & SupportsRightLayoutProxy)...) -> [NSLayoutConstraint] ","identifier":"distribute"},{"signature":"(_ edges: Edges, _ horizontal: CGFloat, _ vertical: CGFloat) -> Expression<Edges> ","identifier":"inset"},{"signature":"(_ item1: A, _ item2: B, _ item3: C, _ item4: D, _ item5: E, _ item6: F, replace group: ConstraintGroup = .init(), block: (A.ProxyType, B.ProxyType, C.ProxyType, D.ProxyType, E.ProxyType, F.ProxyType) -> Void) -> ConstraintGroup ","identifier":"constrain"},{"signature":"(left items: [SupportsLeftLayoutProxy]) -> [NSLayoutConstraint] ","identifier":"align"}]}